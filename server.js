var http = require('http');
var cookie = require('tough-cookie');
var request = require('request').defaults({
	jar: true // enables cookie persistance accross headless http requests
});
var hackathon_options = {
	server: 'http://localhost:8080',
	app: 'http://localhost:5000',
	username: 'cprs1234',
	password: 'cprs4321$',
	facilityCode: '777',
	facilityName: 'TEST VAMC 3'
};

var server = http.createServer(function (request, response) {
	// Parse out the oauth token generated by mobile health web services
	// we need to pass this token in the header of every request we send to patient viewer services and
	// mobile health web platform services, for example:

	// ***** Http Request
	// Authorization: Bearer 8e17c50a-1063-9676-9d02-c3fe64b75112
	// *****
	var authorizationToken = /token=([\w\d-]+)/.exec(request.url)[1];
	response.writeHead(200, { 'Content-Type': 'text/html' });
	response.end('Authorization: Bearer ' + authorizationToken);
});

server.listen(5000, 'localhost');

request.post({
	url : hackathon_options.server + '/AuthorizationServices/provider/security_check', 
	form: {
		'j_username': hackathon_options.username,
		'j_password': hackathon_options.password,
		'facilityCode': hackathon_options.facilityCode,
		'facilityName': hackathon_options.facilityName
	}
}, function (error, response, body) {
	console.log(error);
	console.log(response);
	console.log(body);

	request.get(hackathon_options.server + '/AuthorizationServices/provider/authorize?response_type=code&state=stateId&client_id=MobileBlueButton&redirect_uri=' + hackathon_options.server + '/MobileHealthPlatformWeb/oauthtoken?original_redirect_uri%3D' + hackathon_options.app + '/&scope=read', function(error, response, body) {
		console.log(error);
		console.log(response);
		console.log(body);
	});
});